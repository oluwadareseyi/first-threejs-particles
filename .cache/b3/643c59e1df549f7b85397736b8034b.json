{"id":"shaders/vertex.glsl","dependencies":[{"name":"/Users/seyi/Documents/Developer/awwwards/particles/package.json","includedInParent":true,"mtime":1629392411429}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nattribute vec3 aRandom;\\n\\nvarying vec3 vPosition;\\n\\nuniform float uTime;\\nuniform float uScale;\\n\\nvoid main () {\\n  vPosition = position;\\n\\n  float time = uTime * 4.0;\\n\\n  vec3 pos = position;\\n\\n  pos.x += sin(time * aRandom.x) * 0.01;\\n  pos.y += sin(time * aRandom.y) * 0.01;\\n  pos.z += sin(time * aRandom.z) * 0.01;\\n\\n  pos.x *= uScale + (sin(pos.y * 4.0 + time) * (1.0 - uScale));\\n  pos.y *= uScale + (cos(pos.z * 4.0 + time) * (1.0 - uScale));\\n  pos.z *= uScale + (cos(pos.x * 4.0 + time) * (1.0 - uScale));\\n\\n  pos *= uScale;\\n\\n  vec4 modelViewPosition = modelViewMatrix * vec4(pos, 1.0);\\n  vec4 projectionPosition = projectionMatrix * modelViewPosition;\\n\\n  gl_Position = projectionPosition;\\n  gl_PointSize = 8.0 / -modelViewPosition.z;\\n\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"shaders/vertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"shaders/vertex.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"shaders/vertex.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"shaders/vertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"shaders/vertex.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":801},"source":"shaders/vertex.glsl","original":{"line":1,"column":0}}],"sources":{"shaders/vertex.glsl":"module.exports=\"#define GLSLIFY 1\\nattribute vec3 aRandom;\\n\\nvarying vec3 vPosition;\\n\\nuniform float uTime;\\nuniform float uScale;\\n\\nvoid main () {\\n  vPosition = position;\\n\\n  float time = uTime * 4.0;\\n\\n  vec3 pos = position;\\n\\n  pos.x += sin(time * aRandom.x) * 0.01;\\n  pos.y += sin(time * aRandom.y) * 0.01;\\n  pos.z += sin(time * aRandom.z) * 0.01;\\n\\n  pos.x *= uScale + (sin(pos.y * 4.0 + time) * (1.0 - uScale));\\n  pos.y *= uScale + (cos(pos.z * 4.0 + time) * (1.0 - uScale));\\n  pos.z *= uScale + (cos(pos.x * 4.0 + time) * (1.0 - uScale));\\n\\n  pos *= uScale;\\n\\n  vec4 modelViewPosition = modelViewMatrix * vec4(pos, 1.0);\\n  vec4 projectionPosition = projectionMatrix * modelViewPosition;\\n\\n  gl_Position = projectionPosition;\\n  gl_PointSize = 8.0 / -modelViewPosition.z;\\n\\n}\";"},"lineCount":null}},"error":null,"hash":"6cc089344798c442471be81ce50121fe","cacheData":{"env":{}}}